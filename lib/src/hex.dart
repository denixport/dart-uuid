/// "0123456789abcdef".codeUnits
const List<int> hexCodeUnits = const <int>[
  0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, //
  0x61, 0x62, 0x63, 0x64, 0x65, 0x66
];

const List<int> hexBytes = const <int>[
  0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, //
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F
];

// converts hex char into 4-bit value
int hexToNibble(int char) {
  char -= 0x30;
  if (char >= hexBytes.length) return -1;
  int nibble = hexBytes[char];
  if (nibble == 0xFF) return -1;
  return nibble;
}

int hexToByte(int c1, int c2) {
  c1 -= 0x30;
  c2 -= 0x30;
  if (c1 >= hexBytes.length || c2 >= hexBytes.length) return -1;
  int b1 = hexBytes[c1];
  int b2 = hexBytes[c1];
  if (b1 == 0xFF || b2 == 0xFF) return -1;
  return (b1 << 4) | b2;
}